{"ast":null,"code":"import produce from'immer';import{ActionType}from'../action-types';var initialState={};var reducer=produce(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ActionType.BUNDLE_START:state[action.payload.cellId]={loading:true,code:'',err:''};return state;case ActionType.BUNDLE_COMPLETE:state[action.payload.cellId]={loading:false,code:action.payload.bundle.code,err:action.payload.bundle.err};return state;default:return state;}});export default reducer;","map":{"version":3,"sources":["/home/utoker/Projects/utcode/packages/local-client/src/state/reducers/bundlesReducer.ts"],"names":["produce","ActionType","initialState","reducer","state","action","type","BUNDLE_START","payload","cellId","loading","code","err","BUNDLE_COMPLETE","bundle"],"mappings":"AAAA,MAAOA,CAAAA,OAAP,KAAoB,OAApB,CACA,OAASC,UAAT,KAA2B,iBAA3B,CAaA,GAAMC,CAAAA,YAA0B,CAAG,EAAnC,CAEA,GAAMC,CAAAA,OAAO,CAAGH,OAAO,CACrB,UAAsE,IAArEI,CAAAA,KAAqE,2DAA/CF,YAA+C,IAAjCG,CAAAA,MAAiC,2CACpE,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKL,CAAAA,UAAU,CAACM,YAAhB,CACEH,KAAK,CAACC,MAAM,CAACG,OAAP,CAAeC,MAAhB,CAAL,CAA+B,CAC7BC,OAAO,CAAE,IADoB,CAE7BC,IAAI,CAAE,EAFuB,CAG7BC,GAAG,CAAE,EAHwB,CAA/B,CAKA,MAAOR,CAAAA,KAAP,CACF,IAAKH,CAAAA,UAAU,CAACY,eAAhB,CACET,KAAK,CAACC,MAAM,CAACG,OAAP,CAAeC,MAAhB,CAAL,CAA+B,CAC7BC,OAAO,CAAE,KADoB,CAE7BC,IAAI,CAAEN,MAAM,CAACG,OAAP,CAAeM,MAAf,CAAsBH,IAFC,CAG7BC,GAAG,CAAEP,MAAM,CAACG,OAAP,CAAeM,MAAf,CAAsBF,GAHE,CAA/B,CAKA,MAAOR,CAAAA,KAAP,CACF,QACE,MAAOA,CAAAA,KAAP,CAhBJ,CAkBD,CApBoB,CAAvB,CAuBA,cAAeD,CAAAA,OAAf","sourcesContent":["import produce from 'immer';\nimport { ActionType } from '../action-types';\nimport { Action } from '../actions';\n\ninterface BundlesState {\n  [key: string]:\n    | {\n        loading: boolean;\n        code: string;\n        err: string;\n      }\n    | undefined;\n}\n\nconst initialState: BundlesState = {};\n\nconst reducer = produce(\n  (state: BundlesState = initialState, action: Action): BundlesState => {\n    switch (action.type) {\n      case ActionType.BUNDLE_START:\n        state[action.payload.cellId] = {\n          loading: true,\n          code: '',\n          err: '',\n        };\n        return state;\n      case ActionType.BUNDLE_COMPLETE:\n        state[action.payload.cellId] = {\n          loading: false,\n          code: action.payload.bundle.code,\n          err: action.payload.bundle.err,\n        };\n        return state;\n      default:\n        return state;\n    }\n  }\n);\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}