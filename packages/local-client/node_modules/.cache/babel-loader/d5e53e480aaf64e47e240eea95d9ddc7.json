{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/utoker/Projects/utcode/src/components/add-cell.tsx\",\n    _s = $RefreshSig$();\n\nimport { useActions } from '../hooks/use-actions';\nimport './add-cell.css';\n\nconst AddCell = ({\n  previousCellId,\n  forceVisible\n}) => {\n  _s();\n\n  const {\n    insertCellAfter\n  } = useActions();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `add-cell ${forceVisible && 'force-visible'} `,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button is-rounded is-primary is-small\",\n          onClick: () => insertCellAfter(previousCellId, 'code'),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon is-small\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-plus\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button is-rounded is-primary is-small\",\n          onClick: () => insertCellAfter(previousCellId, 'text'),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon is-small\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-plus\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddCell, \"ain1WfJPsCStQGbSx2B93tc4GvE=\", false, function () {\n  return [useActions];\n});\n\n_c = AddCell;\nexport default AddCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCell\");","map":{"version":3,"sources":["/home/utoker/Projects/utcode/src/components/add-cell.tsx"],"names":["useActions","AddCell","previousCellId","forceVisible","insertCellAfter"],"mappings":";;;;;;AAAA,SAASA,UAAT,QAA2B,sBAA3B;AACA,OAAO,gBAAP;;AAOA,MAAMC,OAA+B,GAAG,CAAC;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAD,KAAsC;AAAA;;AAC5E,QAAM;AAAEC,IAAAA;AAAF,MAAsBJ,UAAU,EAAtC;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAG,YAAWG,YAAY,IAAI,eAAgB,GAA5D;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,uCADZ;AAEE,UAAA,OAAO,EAAE,MAAMC,eAAe,CAACF,cAAD,EAAiB,MAAjB,CAFhC;AAAA,kCAIE;AAAM,YAAA,SAAS,EAAC,eAAhB;AAAA,mCACE;AAAG,cAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AACE,UAAA,SAAS,EAAC,uCADZ;AAEE,UAAA,OAAO,EAAE,MAAME,eAAe,CAACF,cAAD,EAAiB,MAAjB,CAFhC;AAAA,kCAIE;AAAM,YAAA,SAAS,EAAC,eAAhB;AAAA,mCACE;AAAG,cAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAuBE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA,kBADF;AA2BD,CA9BD;;GAAMD,O;UACwBD,U;;;KADxBC,O;AA+BN,eAAeA,OAAf","sourcesContent":["import { useActions } from '../hooks/use-actions';\nimport './add-cell.css';\n\ninterface AddCellProps {\n  previousCellId: string | null;\n  forceVisible?: boolean;\n}\n\nconst AddCell: React.FC<AddCellProps> = ({ previousCellId, forceVisible }) => {\n  const { insertCellAfter } = useActions();\n\n  return (\n    <>\n      <div className={`add-cell ${forceVisible && 'force-visible'} `}>\n        <div className=\"add-buttons\">\n          <button\n            className=\"button is-rounded is-primary is-small\"\n            onClick={() => insertCellAfter(previousCellId, 'code')}\n          >\n            <span className=\"icon is-small\">\n              <i className=\"fas fa-plus\"></i>\n            </span>\n            <span>Code</span>\n          </button>\n          <button\n            className=\"button is-rounded is-primary is-small\"\n            onClick={() => insertCellAfter(previousCellId, 'text')}\n          >\n            <span className=\"icon is-small\">\n              <i className=\"fas fa-plus\"></i>\n            </span>\n            <span>Text</span>\n          </button>\n        </div>\n      </div>\n      <div className=\"divider\"></div>\n    </>\n  );\n};\nexport default AddCell;\n"]},"metadata":{},"sourceType":"module"}