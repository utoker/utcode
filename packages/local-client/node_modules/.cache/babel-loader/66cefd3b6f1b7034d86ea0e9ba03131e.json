{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{useActions}from'../hooks/use-actions';import'./add-cell.css';var AddCell=function AddCell(_ref){var previousCellId=_ref.previousCellId,forceVisible=_ref.forceVisible;var _useActions=useActions(),insertCellAfter=_useActions.insertCellAfter;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"add-cell \".concat(forceVisible&&'force-visible',\" \"),children:/*#__PURE__*/_jsxs(\"div\",{className:\"add-buttons\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"button is-rounded is-primary is-small\",onClick:function onClick(){return insertCellAfter(previousCellId,'code');},children:[/*#__PURE__*/_jsx(\"span\",{className:\"icon is-small\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-plus\"})}),/*#__PURE__*/_jsx(\"span\",{children:\"Code\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"button is-rounded is-primary is-small\",onClick:function onClick(){return insertCellAfter(previousCellId,'text');},children:[/*#__PURE__*/_jsx(\"span\",{className:\"icon is-small\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-plus\"})}),/*#__PURE__*/_jsx(\"span\",{children:\"Text\"})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"divider\"})]});};export default AddCell;","map":{"version":3,"sources":["/home/utoker/Projects/utcode/packages/local-client/src/components/add-cell.tsx"],"names":["useActions","AddCell","previousCellId","forceVisible","insertCellAfter"],"mappings":"6IAAA,OAASA,UAAT,KAA2B,sBAA3B,CACA,MAAO,gBAAP,CAOA,GAAMC,CAAAA,OAA+B,CAAG,QAAlCA,CAAAA,OAAkC,MAAsC,IAAnCC,CAAAA,cAAmC,MAAnCA,cAAmC,CAAnBC,YAAmB,MAAnBA,YAAmB,iBAChDH,UAAU,EADsC,CACpEI,eADoE,aACpEA,eADoE,CAG5E,mBACE,wCACE,YAAK,SAAS,oBAAcD,YAAY,EAAI,eAA9B,KAAd,uBACE,aAAK,SAAS,CAAC,aAAf,wBACE,gBACE,SAAS,CAAC,uCADZ,CAEE,OAAO,CAAE,yBAAMC,CAAAA,eAAe,CAACF,cAAD,CAAiB,MAAjB,CAArB,EAFX,wBAIE,aAAM,SAAS,CAAC,eAAhB,uBACE,UAAG,SAAS,CAAC,aAAb,EADF,EAJF,cAOE,8BAPF,GADF,cAUE,gBACE,SAAS,CAAC,uCADZ,CAEE,OAAO,CAAE,yBAAME,CAAAA,eAAe,CAACF,cAAD,CAAiB,MAAjB,CAArB,EAFX,wBAIE,aAAM,SAAS,CAAC,eAAhB,uBACE,UAAG,SAAS,CAAC,aAAb,EADF,EAJF,cAOE,8BAPF,GAVF,GADF,EADF,cAuBE,YAAK,SAAS,CAAC,SAAf,EAvBF,GADF,CA2BD,CA9BD,CA+BA,cAAeD,CAAAA,OAAf","sourcesContent":["import { useActions } from '../hooks/use-actions';\nimport './add-cell.css';\n\ninterface AddCellProps {\n  previousCellId: string | null;\n  forceVisible?: boolean;\n}\n\nconst AddCell: React.FC<AddCellProps> = ({ previousCellId, forceVisible }) => {\n  const { insertCellAfter } = useActions();\n\n  return (\n    <>\n      <div className={`add-cell ${forceVisible && 'force-visible'} `}>\n        <div className=\"add-buttons\">\n          <button\n            className=\"button is-rounded is-primary is-small\"\n            onClick={() => insertCellAfter(previousCellId, 'code')}\n          >\n            <span className=\"icon is-small\">\n              <i className=\"fas fa-plus\"></i>\n            </span>\n            <span>Code</span>\n          </button>\n          <button\n            className=\"button is-rounded is-primary is-small\"\n            onClick={() => insertCellAfter(previousCellId, 'text')}\n          >\n            <span className=\"icon is-small\">\n              <i className=\"fas fa-plus\"></i>\n            </span>\n            <span>Text</span>\n          </button>\n        </div>\n      </div>\n      <div className=\"divider\"></div>\n    </>\n  );\n};\nexport default AddCell;\n"]},"metadata":{},"sourceType":"module"}