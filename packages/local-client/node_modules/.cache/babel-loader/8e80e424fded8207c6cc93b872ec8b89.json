{"ast":null,"code":"import produce from'immer';import{ActionType}from'../action-types';var initialState={loading:false,error:null,order:[],data:{}};var reducer=produce(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ActionType.UPDATE_CELL:var _action$payload=action.payload,id=_action$payload.id,content=_action$payload.content;state.data[id].content=content;return state;case ActionType.DELETE_CELL:delete state.data[action.payload];state.order=state.order.filter(function(id){return id!==action.payload;});return state;case ActionType.MOVE_CELL:var direction=action.payload.direction;var index=state.order.findIndex(function(id){return id===action.payload.id;});var targetIndex=direction==='up'?index-1:index+1;if(targetIndex<0||targetIndex>state.order.length-1){return state;}state.order[index]=state.order[targetIndex];state.order[targetIndex]=action.payload.id;return state;case ActionType.INSERT_CELL_AFTER:{var cell={content:'',type:action.payload.type,id:randomId()};state.data[cell.id]=cell;var _index=state.order.findIndex(function(id){return id===action.payload.id;});if(_index<0){state.order.unshift(cell.id);}else{state.order.splice(_index+1,0,cell.id);}return state;}default:return state;}},initialState);var randomId=function randomId(){return Math.random().toString(36).substr(2,5);};export default reducer;","map":{"version":3,"sources":["/home/utoker/Projects/utcode/packages/local-client/src/state/reducers/cellsReducer.ts"],"names":["produce","ActionType","initialState","loading","error","order","data","reducer","state","action","type","UPDATE_CELL","payload","id","content","DELETE_CELL","filter","MOVE_CELL","direction","index","findIndex","targetIndex","length","INSERT_CELL_AFTER","cell","randomId","unshift","splice","Math","random","toString","substr"],"mappings":"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","sourcesContent":["import produce from 'immer';\nimport { ActionType } from '../action-types';\nimport { Action } from '../actions';\nimport { Cell } from '../cell';\n\ninterface CellsState {\n  loading: boolean;\n  error: string | null;\n  order: string[];\n  data: {\n    [key: string]: Cell;\n  };\n}\n\nconst initialState: CellsState = {\n  loading: false,\n  error: null,\n  order: [],\n  data: {},\n};\n\nconst reducer = produce((state: CellsState = initialState, action: Action) => {\n  switch (action.type) {\n    case ActionType.UPDATE_CELL:\n      const { id, content } = action.payload;\n      state.data[id].content = content;\n      return state;\n    case ActionType.DELETE_CELL:\n      delete state.data[action.payload];\n      state.order = state.order.filter((id) => id !== action.payload);\n      return state;\n    case ActionType.MOVE_CELL:\n      const { direction } = action.payload;\n      const index = state.order.findIndex((id) => id === action.payload.id);\n      const targetIndex = direction === 'up' ? index - 1 : index + 1;\n      if (targetIndex < 0 || targetIndex > state.order.length - 1) {\n        return state;\n      }\n      state.order[index] = state.order[targetIndex];\n      state.order[targetIndex] = action.payload.id;\n      return state;\n    case ActionType.INSERT_CELL_AFTER: {\n      const cell: Cell = {\n        content: '',\n        type: action.payload.type,\n        id: randomId(),\n      };\n\n      state.data[cell.id] = cell;\n\n      const index = state.order.findIndex((id) => id === action.payload.id);\n\n      if (index < 0) {\n        state.order.unshift(cell.id);\n      } else {\n        state.order.splice(index + 1, 0, cell.id);\n      }\n      return state;\n    }\n    default:\n      return state;\n  }\n}, initialState);\n\nconst randomId = () => {\n  return Math.random().toString(36).substr(2, 5);\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}