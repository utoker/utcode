{"ast":null,"code":"import _createForOfIteratorHelper from\"/home/utoker/Projects/utcode/packages/local-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import{useTypedSelector}from'./use-typed-selector';var useCumulativeCode=function useCumulativeCode(cellId){return useTypedSelector(function(state){var _state$cells=state.cells,data=_state$cells.data,order=_state$cells.order;var orderedCells=order.map(function(id){return data[id];});var showFunc=\"\\n    \\n          import _React from 'react';\\n          import _ReactDOM from 'react-dom';\\n          var show = (value) => {\\n            const root = document.querySelector('#root');\\n          \\n            if (typeof value === 'object') {\\n              if (value.$$typeof && value.props) {\\n                _ReactDOM.render(value, root);\\n              } else {\\n                root.innerHTML = JSON.stringify(value);\\n              }\\n            } else {\\n              root.innerHTML = value;\\n            }\\n          };\\n        \";var showFuncNoop='var show = ()=>{}';var cumulativeCode=[];var _iterator=_createForOfIteratorHelper(orderedCells),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var c=_step.value;if(c.type==='code'){if(c.id===cellId){cumulativeCode.push(showFunc);}else{cumulativeCode.push(showFuncNoop);}cumulativeCode.push(c.content);}if(c.id===cellId){break;}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return cumulativeCode;}).join('\\n');};export default useCumulativeCode;","map":{"version":3,"sources":["/home/utoker/Projects/utcode/packages/local-client/src/hooks/use-cumulative-code.ts"],"names":["useTypedSelector","useCumulativeCode","cellId","state","cells","data","order","orderedCells","map","id","showFunc","showFuncNoop","cumulativeCode","c","type","push","content","join"],"mappings":"iMAAA,OAASA,gBAAT,KAAiC,sBAAjC,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,MAAD,CAAoB,CAC5C,MAAOF,CAAAA,gBAAgB,CAAC,SAACG,KAAD,CAAW,kBACTA,KAAK,CAACC,KADG,CACzBC,IADyB,cACzBA,IADyB,CACnBC,KADmB,cACnBA,KADmB,CAEjC,GAAMC,CAAAA,YAAY,CAAGD,KAAK,CAACE,GAAN,CAAU,SAACC,EAAD,QAAQJ,CAAAA,IAAI,CAACI,EAAD,CAAZ,EAAV,CAArB,CAEA,GAAMC,CAAAA,QAAQ,giBAAd,CAkBA,GAAMC,CAAAA,YAAY,CAAG,mBAArB,CACA,GAAMC,CAAAA,cAAc,CAAG,EAAvB,CAvBiC,yCAwBnBL,YAxBmB,YAwBjC,+CAA4B,IAAnBM,CAAAA,CAAmB,aAC1B,GAAIA,CAAC,CAACC,IAAF,GAAW,MAAf,CAAuB,CACrB,GAAID,CAAC,CAACJ,EAAF,GAASP,MAAb,CAAqB,CACnBU,cAAc,CAACG,IAAf,CAAoBL,QAApB,EACD,CAFD,IAEO,CACLE,cAAc,CAACG,IAAf,CAAoBJ,YAApB,EACD,CACDC,cAAc,CAACG,IAAf,CAAoBF,CAAC,CAACG,OAAtB,EACD,CACD,GAAIH,CAAC,CAACJ,EAAF,GAASP,MAAb,CAAqB,CACnB,MACD,CACF,CApCgC,qDAqCjC,MAAOU,CAAAA,cAAP,CACD,CAtCsB,CAAhB,CAsCJK,IAtCI,CAsCC,IAtCD,CAAP,CAuCD,CAxCD,CAyCA,cAAehB,CAAAA,iBAAf","sourcesContent":["import { useTypedSelector } from './use-typed-selector';\n\nconst useCumulativeCode = (cellId: string) => {\n  return useTypedSelector((state) => {\n    const { data, order } = state.cells;\n    const orderedCells = order.map((id) => data[id]);\n\n    const showFunc = `\n    \n          import _React from 'react';\n          import _ReactDOM from 'react-dom';\n          var show = (value) => {\n            const root = document.querySelector('#root');\n          \n            if (typeof value === 'object') {\n              if (value.$$typeof && value.props) {\n                _ReactDOM.render(value, root);\n              } else {\n                root.innerHTML = JSON.stringify(value);\n              }\n            } else {\n              root.innerHTML = value;\n            }\n          };\n        `;\n    const showFuncNoop = 'var show = ()=>{}';\n    const cumulativeCode = [];\n    for (let c of orderedCells) {\n      if (c.type === 'code') {\n        if (c.id === cellId) {\n          cumulativeCode.push(showFunc);\n        } else {\n          cumulativeCode.push(showFuncNoop);\n        }\n        cumulativeCode.push(c.content);\n      }\n      if (c.id === cellId) {\n        break;\n      }\n    }\n    return cumulativeCode;\n  }).join('\\n');\n};\nexport default useCumulativeCode;\n"]},"metadata":{},"sourceType":"module"}