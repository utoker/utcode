{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/utoker/Projects/utcode/src/components/cell-list.tsx\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from 'react';\nimport { useTypedSelector } from '../hooks/use-typed-selector';\nimport AddCell from './add-cell';\nimport CellListItem from './cell-list-item';\n\nconst CellList = () => {\n  _s();\n\n  const cells = useTypedSelector(state => {\n    const cellsReducer = state.cells;\n    return cellsReducer ? cellsReducer.order.map(id => cellsReducer.data[id]) : [];\n  });\n  const renderedCells = cells.map(cell => /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CellListItem, {\n      cell: cell\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddCell, {\n      previousCellId: cell.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, cell.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AddCell, {\n      forceVisible: cells.length === 0,\n      previousCellId: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), renderedCells]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CellList, \"ij3ho+NMbIxaBKnXgl+evU0tiZI=\", false, function () {\n  return [useTypedSelector];\n});\n\n_c = CellList;\nexport default CellList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CellList\");","map":{"version":3,"sources":["/home/utoker/Projects/utcode/src/components/cell-list.tsx"],"names":["Fragment","useTypedSelector","AddCell","CellListItem","CellList","cells","state","cellsReducer","order","map","id","data","renderedCells","cell","length"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;;AAEA,MAAMC,QAAkB,GAAG,MAAM;AAAA;;AAC/B,QAAMC,KAAK,GAAGJ,gBAAgB,CAAEK,KAAD,IAAW;AACxC,UAAMC,YAAY,GAAGD,KAAK,CAACD,KAA3B;AACA,WAAOE,YAAY,GACfA,YAAY,CAACC,KAAb,CAAmBC,GAAnB,CAAwBC,EAAD,IAAQH,YAAY,CAACI,IAAb,CAAkBD,EAAlB,CAA/B,CADe,GAEf,EAFJ;AAGD,GAL6B,CAA9B;AAMA,QAAME,aAAa,GAAGP,KAAK,CAACI,GAAN,CAAWI,IAAD,iBAC9B,QAAC,QAAD;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,cAAc,EAAEA,IAAI,CAACH;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,KAAeG,IAAI,CAACH,EAApB;AAAA;AAAA;AAAA;AAAA,UADoB,CAAtB;AAOA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,YAAY,EAAEL,KAAK,CAACS,MAAN,KAAiB,CAAxC;AAA2C,MAAA,cAAc,EAAE;AAA3D;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,aAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CApBD;;GAAMR,Q;UACUH,gB;;;KADVG,Q;AAqBN,eAAeA,QAAf","sourcesContent":["import { Fragment } from 'react';\nimport { useTypedSelector } from '../hooks/use-typed-selector';\nimport AddCell from './add-cell';\nimport CellListItem from './cell-list-item';\n\nconst CellList: React.FC = () => {\n  const cells = useTypedSelector((state) => {\n    const cellsReducer = state.cells;\n    return cellsReducer\n      ? cellsReducer.order.map((id) => cellsReducer.data[id])\n      : [];\n  });\n  const renderedCells = cells.map((cell) => (\n    <Fragment key={cell.id}>\n      <CellListItem cell={cell} />\n      <AddCell previousCellId={cell.id} />\n    </Fragment>\n  ));\n\n  return (\n    <div>\n      <AddCell forceVisible={cells.length === 0} previousCellId={null} />\n      {renderedCells}\n    </div>\n  );\n};\nexport default CellList;\n"]},"metadata":{},"sourceType":"module"}