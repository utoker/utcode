{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import CodeCell from'./code-cell';import TextEditor from'./text-editor';import ActionBar from'./action-bar';import'./cell-list-item.css';var CellListItem=function CellListItem(_ref){var cell=_ref.cell;var child;if(cell.type==='code'){child=/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"action-bar-wrapper\",children:/*#__PURE__*/_jsx(ActionBar,{id:cell.id})}),/*#__PURE__*/_jsx(CodeCell,{cell:cell})]});}else{child=/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(TextEditor,{cell:cell}),/*#__PURE__*/_jsx(ActionBar,{id:cell.id})]});}return/*#__PURE__*/_jsx(\"div\",{className:\"cell-list-item\",children:child});};export default CellListItem;","map":{"version":3,"sources":["/home/utoker/Projects/utcode/packages/local-client/src/components/cell-list-item.tsx"],"names":["CodeCell","TextEditor","ActionBar","CellListItem","cell","child","type","id"],"mappings":"6IACA,MAAOA,CAAAA,QAAP,KAAqB,aAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CAEA,MAAO,sBAAP,CAKA,GAAMC,CAAAA,YAAyC,CAAG,QAA5CA,CAAAA,YAA4C,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,CAC9D,GAAIC,CAAAA,KAAJ,CACA,GAAID,IAAI,CAACE,IAAL,GAAc,MAAlB,CAA0B,CACxBD,KAAK,cACH,wCACE,YAAK,SAAS,CAAC,oBAAf,uBACE,KAAC,SAAD,EAAW,EAAE,CAAED,IAAI,CAACG,EAApB,EADF,EADF,cAIE,KAAC,QAAD,EAAU,IAAI,CAAEH,IAAhB,EAJF,GADF,CAQD,CATD,IASO,CACLC,KAAK,cACH,wCACE,KAAC,UAAD,EAAY,IAAI,CAAED,IAAlB,EADF,cAEE,KAAC,SAAD,EAAW,EAAE,CAAEA,IAAI,CAACG,EAApB,EAFF,GADF,CAMD,CAED,mBAAO,YAAK,SAAS,CAAC,gBAAf,UAAiCF,KAAjC,EAAP,CACD,CArBD,CAsBA,cAAeF,CAAAA,YAAf","sourcesContent":["import { Cell } from '../state';\nimport CodeCell from './code-cell';\nimport TextEditor from './text-editor';\nimport ActionBar from './action-bar';\n\nimport './cell-list-item.css';\ninterface CellListItemProps {\n  cell: Cell;\n}\n\nconst CellListItem: React.FC<CellListItemProps> = ({ cell }) => {\n  let child: JSX.Element;\n  if (cell.type === 'code') {\n    child = (\n      <>\n        <div className=\"action-bar-wrapper\">\n          <ActionBar id={cell.id} />\n        </div>\n        <CodeCell cell={cell} />\n      </>\n    );\n  } else {\n    child = (\n      <>\n        <TextEditor cell={cell} />\n        <ActionBar id={cell.id} />\n      </>\n    );\n  }\n\n  return <div className=\"cell-list-item\">{child}</div>;\n};\nexport default CellListItem;\n"]},"metadata":{},"sourceType":"module"}