{"ast":null,"code":"import{saveCells}from'../action-creators';import{ActionType}from'../action-types';export var persistMiddleware=function persistMiddleware(_ref){var dispatch=_ref.dispatch,getState=_ref.getState;var timer;return function(next){return function(action){next(action);if([ActionType.MOVE_CELL,ActionType.UPDATE_CELL,ActionType.DELETE_CELL,ActionType.INSERT_CELL_AFTER].includes(action.type)){if(timer){clearTimeout(timer);}timer=setTimeout(function(){saveCells()(dispatch,getState);},250);}};};};","map":{"version":3,"sources":["/home/utoker/Projects/utcode/packages/local-client/src/state/middlewares/persist-middleware.ts"],"names":["saveCells","ActionType","persistMiddleware","dispatch","getState","timer","next","action","MOVE_CELL","UPDATE_CELL","DELETE_CELL","INSERT_CELL_AFTER","includes","type","clearTimeout","setTimeout"],"mappings":"AACA,OAASA,SAAT,KAA0B,oBAA1B,CACA,OAASC,UAAT,KAA2B,iBAA3B,CAIA,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,MAM3B,IALJC,CAAAA,QAKI,MALJA,QAKI,CAJJC,QAII,MAJJA,QAII,CACJ,GAAIC,CAAAA,KAAJ,CACA,MAAO,UAACC,IAAD,CAAoC,CACzC,MAAO,UAACC,MAAD,CAAoB,CACzBD,IAAI,CAACC,MAAD,CAAJ,CAEA,GACE,CACEN,UAAU,CAACO,SADb,CAEEP,UAAU,CAACQ,WAFb,CAGER,UAAU,CAACS,WAHb,CAIET,UAAU,CAACU,iBAJb,EAKEC,QALF,CAKWL,MAAM,CAACM,IALlB,CADF,CAOE,CACA,GAAIR,KAAJ,CAAW,CACTS,YAAY,CAACT,KAAD,CAAZ,CACD,CACDA,KAAK,CAAGU,UAAU,CAAC,UAAM,CACvBf,SAAS,GAAGG,QAAH,CAAaC,QAAb,CAAT,CACD,CAFiB,CAEf,GAFe,CAAlB,CAGD,CACF,CAlBD,CAmBD,CApBD,CAqBD,CA7BM","sourcesContent":["import { Dispatch } from 'redux';\nimport { saveCells } from '../action-creators';\nimport { ActionType } from '../action-types';\nimport { Action } from '../actions';\nimport { RootState } from '../reducers';\n\nexport const persistMiddleware = ({\n  dispatch,\n  getState,\n}: {\n  dispatch: Dispatch<Action>;\n  getState: () => RootState;\n}) => {\n  let timer: NodeJS.Timeout;\n  return (next: (action: Action) => void) => {\n    return (action: Action) => {\n      next(action);\n\n      if (\n        [\n          ActionType.MOVE_CELL,\n          ActionType.UPDATE_CELL,\n          ActionType.DELETE_CELL,\n          ActionType.INSERT_CELL_AFTER,\n        ].includes(action.type)\n      ) {\n        if (timer) {\n          clearTimeout(timer);\n        }\n        timer = setTimeout(() => {\n          saveCells()(dispatch, getState);\n        }, 250);\n      }\n    };\n  };\n};\n"]},"metadata":{},"sourceType":"module"}