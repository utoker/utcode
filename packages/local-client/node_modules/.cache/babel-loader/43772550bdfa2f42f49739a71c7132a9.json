{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/utoker/Projects/utcode/packages/local-client/src/components/preview.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef } from 'react';\nimport './preview.css';\nconst html = `\n<html>\n<head></head>\n<body>\n<div id=\"root\"></div>\n<script>\n  const handleError = (err) =>{\n    const root = document.querySelector('#root');\n    root.innerHTML = '<div style=\"color:red;\"><h4>Runtime Error</h4>' + err +' </div>'\n    console.error(err);\n  }\n\n  window.addEventListener('error',(event)=>{\n    event.preventDefault()\n    handleError(event.error);\n  })\n\n  window.addEventListener('message',(event)=>{\n    try {\n      eval(event.data);\n    } catch(err) { \n      handleError(err)\n    }\n  },false);\n</script>\n</body>\n</html>\n`;\n\nconst Preview = ({\n  code,\n  BundleStatus\n}) => {\n  _s();\n\n  const iframe = useRef();\n  useEffect(() => {\n    iframe.current.srcdoc = html;\n    setTimeout(() => {\n      iframe.current.contentWindow.postMessage(code, '*');\n    }, 60);\n  }, [code]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"preview-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n      title: \"preview\",\n      ref: iframe,\n      srcDoc: html,\n      sandbox: \"allow-scripts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), BundleStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-error\",\n      children: [BundleStatus, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Preview, \"GAFleWBZ6O+8Op7dBuDH6PzOglQ=\");\n\n_c = Preview;\nexport default Preview;\n\nvar _c;\n\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"sources":["/home/utoker/Projects/utcode/packages/local-client/src/components/preview.tsx"],"names":["useEffect","useRef","html","Preview","code","BundleStatus","iframe","current","srcdoc","setTimeout","contentWindow","postMessage"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,OAAO,eAAP;AAOA,MAAMC,IAAI,GAAI;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3BA;;AA6BA,MAAMC,OAA+B,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAA4B;AAAA;;AAClE,QAAMC,MAAM,GAAGL,MAAM,EAArB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,MAAM,CAACC,OAAP,CAAeC,MAAf,GAAwBN,IAAxB;AACAO,IAAAA,UAAU,CAAC,MAAM;AACfH,MAAAA,MAAM,CAACC,OAAP,CAAeG,aAAf,CAA6BC,WAA7B,CAAyCP,IAAzC,EAA+C,GAA/C;AACD,KAFS,EAEP,EAFO,CAAV;AAGD,GALQ,EAKN,CAACA,IAAD,CALM,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,GAAG,EAAEE,MAFP;AAGE,MAAA,MAAM,EAAEJ,IAHV;AAIE,MAAA,OAAO,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,YADF,EAOGG,YAAY,iBAAI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,iBAAgCA,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,YAPnB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CArBD;;GAAMF,O;;KAAAA,O;AAuBN,eAAeA,OAAf","sourcesContent":["import { useEffect, useRef } from 'react';\nimport './preview.css';\n\ninterface PreviewProps {\n  code: string;\n  BundleStatus: string;\n}\n\nconst html = `\n<html>\n<head></head>\n<body>\n<div id=\"root\"></div>\n<script>\n  const handleError = (err) =>{\n    const root = document.querySelector('#root');\n    root.innerHTML = '<div style=\"color:red;\"><h4>Runtime Error</h4>' + err +' </div>'\n    console.error(err);\n  }\n\n  window.addEventListener('error',(event)=>{\n    event.preventDefault()\n    handleError(event.error);\n  })\n\n  window.addEventListener('message',(event)=>{\n    try {\n      eval(event.data);\n    } catch(err) { \n      handleError(err)\n    }\n  },false);\n</script>\n</body>\n</html>\n`;\n\nconst Preview: React.FC<PreviewProps> = ({ code, BundleStatus }) => {\n  const iframe = useRef<any>();\n\n  useEffect(() => {\n    iframe.current.srcdoc = html;\n    setTimeout(() => {\n      iframe.current.contentWindow.postMessage(code, '*');\n    }, 60);\n  }, [code]);\n\n  return (\n    <div className=\"preview-wrapper\">\n      <iframe\n        title=\"preview\"\n        ref={iframe}\n        srcDoc={html}\n        sandbox=\"allow-scripts\"\n      />\n      {BundleStatus && <div className=\"preview-error\">{BundleStatus} </div>}\n    </div>\n  );\n};\n\nexport default Preview;\n"]},"metadata":{},"sourceType":"module"}