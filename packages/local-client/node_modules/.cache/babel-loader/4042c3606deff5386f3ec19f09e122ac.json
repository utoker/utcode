{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/utoker/Projects/utcode/packages/local-client/src/components/resizable.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { ResizableBox } from 'react-resizable';\nimport './resizable.css';\n\nconst Resizable = ({\n  direction,\n  children\n}) => {\n  _s();\n\n  let resizableProps;\n  const [innerHeight, setInnerHeight] = useState(window.innerHeight);\n  const [innerWidth, setInnerWidth] = useState(window.innerWidth);\n  const [width, setWidth] = useState(window.innerWidth * 0.75);\n  useEffect(() => {\n    let timer;\n\n    const listener = () => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n\n      timer = setTimeout(() => {\n        setInnerHeight(window.innerHeight);\n        setInnerWidth(window.innerWidth);\n\n        if (window.innerWidth * 0.75 < width) {\n          setWidth(window.innerWidth * 0.75);\n        }\n      }, 100);\n    };\n\n    window.addEventListener('resize', listener);\n    return () => {\n      window.removeEventListener('resize', listener);\n    };\n  }, [width]);\n\n  if (direction === 'vertical') {\n    resizableProps = {\n      maxConstraints: [Infinity, innerHeight * 0.9],\n      height: 300,\n      width: Infinity,\n      resizeHandles: ['s']\n    };\n  } else {\n    resizableProps = {\n      className: 'resize-horizontal',\n      maxConstraints: [innerWidth * 0.9, Infinity],\n      height: Infinity,\n      width,\n      resizeHandles: ['e'],\n      onResizeStop: (event, data) => {\n        setWidth(data.size.width);\n      }\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(ResizableBox, { ...resizableProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Resizable, \"m+WxLgYILcvcZeed5BdA/O/PzMM=\");\n\n_c = Resizable;\nexport default Resizable;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resizable\");","map":{"version":3,"sources":["/home/utoker/Projects/utcode/packages/local-client/src/components/resizable.tsx"],"names":["useEffect","useState","ResizableBox","Resizable","direction","children","resizableProps","innerHeight","setInnerHeight","window","innerWidth","setInnerWidth","width","setWidth","timer","listener","clearTimeout","setTimeout","addEventListener","removeEventListener","maxConstraints","Infinity","height","resizeHandles","className","onResizeStop","event","data","size"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,YAAT,QAAgD,iBAAhD;AACA,OAAO,iBAAP;;AAKA,MAAMC,SAAmC,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA6B;AAAA;;AACvE,MAAIC,cAAJ;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAACQ,MAAM,CAACF,WAAR,CAA9C;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAACQ,MAAM,CAACC,UAAR,CAA5C;AACA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAACQ,MAAM,CAACC,UAAP,GAAoB,IAArB,CAAlC;AACAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,KAAJ;;AACA,UAAMC,QAAQ,GAAG,MAAM;AACrB,UAAID,KAAJ,EAAW;AACTE,QAAAA,YAAY,CAACF,KAAD,CAAZ;AACD;;AACDA,MAAAA,KAAK,GAAGG,UAAU,CAAC,MAAM;AACvBT,QAAAA,cAAc,CAACC,MAAM,CAACF,WAAR,CAAd;AACAI,QAAAA,aAAa,CAACF,MAAM,CAACC,UAAR,CAAb;;AACA,YAAID,MAAM,CAACC,UAAP,GAAoB,IAApB,GAA2BE,KAA/B,EAAsC;AACpCC,UAAAA,QAAQ,CAACJ,MAAM,CAACC,UAAP,GAAoB,IAArB,CAAR;AACD;AACF,OANiB,EAMf,GANe,CAAlB;AAOD,KAXD;;AAYAD,IAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkCH,QAAlC;AACA,WAAO,MAAM;AACXN,MAAAA,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCJ,QAArC;AACD,KAFD;AAGD,GAlBQ,EAkBN,CAACH,KAAD,CAlBM,CAAT;;AAoBA,MAAIR,SAAS,KAAK,UAAlB,EAA8B;AAC5BE,IAAAA,cAAc,GAAG;AACfc,MAAAA,cAAc,EAAE,CAACC,QAAD,EAAWd,WAAW,GAAG,GAAzB,CADD;AAEfe,MAAAA,MAAM,EAAE,GAFO;AAGfV,MAAAA,KAAK,EAAES,QAHQ;AAIfE,MAAAA,aAAa,EAAE,CAAC,GAAD;AAJA,KAAjB;AAMD,GAPD,MAOO;AACLjB,IAAAA,cAAc,GAAG;AACfkB,MAAAA,SAAS,EAAE,mBADI;AAEfJ,MAAAA,cAAc,EAAE,CAACV,UAAU,GAAG,GAAd,EAAmBW,QAAnB,CAFD;AAGfC,MAAAA,MAAM,EAAED,QAHO;AAIfT,MAAAA,KAJe;AAKfW,MAAAA,aAAa,EAAE,CAAC,GAAD,CALA;AAMfE,MAAAA,YAAY,EAAE,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC7Bd,QAAAA,QAAQ,CAACc,IAAI,CAACC,IAAL,CAAUhB,KAAX,CAAR;AACD;AARc,KAAjB;AAUD;;AAED,sBAAO,QAAC,YAAD,OAAkBN,cAAlB;AAAA,cAAmCD;AAAnC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA9CD;;GAAMF,S;;KAAAA,S;AAgDN,eAAeA,SAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { ResizableBox, ResizableBoxProps } from 'react-resizable';\nimport './resizable.css';\n\ninterface ResizableProps {\n  direction: 'vertical' | 'horizontal';\n}\nconst Resizable: React.FC<ResizableProps> = ({ direction, children }) => {\n  let resizableProps: ResizableBoxProps;\n  const [innerHeight, setInnerHeight] = useState(window.innerHeight);\n  const [innerWidth, setInnerWidth] = useState(window.innerWidth);\n  const [width, setWidth] = useState(window.innerWidth * 0.75);\n  useEffect(() => {\n    let timer: any;\n    const listener = () => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n      timer = setTimeout(() => {\n        setInnerHeight(window.innerHeight);\n        setInnerWidth(window.innerWidth);\n        if (window.innerWidth * 0.75 < width) {\n          setWidth(window.innerWidth * 0.75);\n        }\n      }, 100);\n    };\n    window.addEventListener('resize', listener);\n    return () => {\n      window.removeEventListener('resize', listener);\n    };\n  }, [width]);\n\n  if (direction === 'vertical') {\n    resizableProps = {\n      maxConstraints: [Infinity, innerHeight * 0.9],\n      height: 300,\n      width: Infinity,\n      resizeHandles: ['s'],\n    };\n  } else {\n    resizableProps = {\n      className: 'resize-horizontal',\n      maxConstraints: [innerWidth * 0.9, Infinity],\n      height: Infinity,\n      width,\n      resizeHandles: ['e'],\n      onResizeStop: (event, data) => {\n        setWidth(data.size.width);\n      },\n    };\n  }\n\n  return <ResizableBox {...resizableProps}>{children}</ResizableBox>;\n};\n\nexport default Resizable;\n"]},"metadata":{},"sourceType":"module"}