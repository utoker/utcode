{"ast":null,"code":"import * as esbuild from 'esbuild-wasm';\nimport { fetchPlugin } from './plugins/fetch-plugin';\nimport { unpkgPathPlugin } from './plugins/unpkg-path-plugin';\nlet service;\n\nconst bundle = async rawCode => {\n  if (!service) {\n    service = await esbuild.startService({\n      worker: true,\n      wasmURL: 'https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm'\n    });\n  }\n\n  try {\n    const result = await service.build({\n      entryPoints: ['index.js'],\n      bundle: true,\n      write: false,\n      plugins: [unpkgPathPlugin(), fetchPlugin(rawCode)],\n      define: {\n        'process.env.NODE_ENV': \"'production'\",\n        global: 'window'\n      },\n      jsxFactory: '_React.createElement',\n      jsxFragment: '_React.Fragment'\n    });\n    return {\n      code: result.outputFiles[0].text,\n      err: ''\n    };\n  } catch (err) {\n    return {\n      code: '',\n      err: err.message\n    };\n  }\n};\n\nexport default bundle;","map":{"version":3,"sources":["/home/utoker/Projects/utcode/packages/local-client/src/bundler/index.ts"],"names":["esbuild","fetchPlugin","unpkgPathPlugin","service","bundle","rawCode","startService","worker","wasmURL","result","build","entryPoints","write","plugins","define","global","jsxFactory","jsxFragment","code","outputFiles","text","err","message"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,cAAzB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,eAAT,QAAgC,6BAAhC;AAEA,IAAIC,OAAJ;;AAEA,MAAMC,MAAM,GAAG,MAAOC,OAAP,IAA2B;AACxC,MAAI,CAACF,OAAL,EAAc;AACZA,IAAAA,OAAO,GAAG,MAAMH,OAAO,CAACM,YAAR,CAAqB;AACnCC,MAAAA,MAAM,EAAE,IAD2B;AAEnCC,MAAAA,OAAO,EAAE;AAF0B,KAArB,CAAhB;AAID;;AACD,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMN,OAAO,CAACO,KAAR,CAAc;AACjCC,MAAAA,WAAW,EAAE,CAAC,UAAD,CADoB;AAEjCP,MAAAA,MAAM,EAAE,IAFyB;AAGjCQ,MAAAA,KAAK,EAAE,KAH0B;AAIjCC,MAAAA,OAAO,EAAE,CAACX,eAAe,EAAhB,EAAoBD,WAAW,CAACI,OAAD,CAA/B,CAJwB;AAKjCS,MAAAA,MAAM,EAAE;AACN,gCAAwB,cADlB;AAENC,QAAAA,MAAM,EAAE;AAFF,OALyB;AASjCC,MAAAA,UAAU,EAAE,sBATqB;AAUjCC,MAAAA,WAAW,EAAE;AAVoB,KAAd,CAArB;AAaA,WAAO;AAAEC,MAAAA,IAAI,EAAET,MAAM,CAACU,WAAP,CAAmB,CAAnB,EAAsBC,IAA9B;AAAoCC,MAAAA,GAAG,EAAE;AAAzC,KAAP;AACD,GAfD,CAeE,OAAOA,GAAP,EAAiB;AACjB,WAAO;AACLH,MAAAA,IAAI,EAAE,EADD;AAELG,MAAAA,GAAG,EAAEA,GAAG,CAACC;AAFJ,KAAP;AAID;AACF,CA5BD;;AA8BA,eAAelB,MAAf","sourcesContent":["import * as esbuild from 'esbuild-wasm';\nimport { fetchPlugin } from './plugins/fetch-plugin';\nimport { unpkgPathPlugin } from './plugins/unpkg-path-plugin';\n\nlet service: esbuild.Service;\n\nconst bundle = async (rawCode: string) => {\n  if (!service) {\n    service = await esbuild.startService({\n      worker: true,\n      wasmURL: 'https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm',\n    });\n  }\n  try {\n    const result = await service.build({\n      entryPoints: ['index.js'],\n      bundle: true,\n      write: false,\n      plugins: [unpkgPathPlugin(), fetchPlugin(rawCode)],\n      define: {\n        'process.env.NODE_ENV': \"'production'\",\n        global: 'window',\n      },\n      jsxFactory: '_React.createElement',\n      jsxFragment: '_React.Fragment',\n    });\n\n    return { code: result.outputFiles[0].text, err: '' };\n  } catch (err: any) {\n    return {\n      code: '',\n      err: err.message,\n    };\n  }\n};\n\nexport default bundle;\n"]},"metadata":{},"sourceType":"module"}