{"version":3,"file":"monaco-jsx-highlighter.js","sources":["../../node_modules/style-inject/dist/style-inject.es.js","../../src/utils/babel.js","../../src/utils/monaco.js","../../src/core/DecoratorMapper.js","../../src/core/Commenter.js","../../src/core/MonacoJSXHighlighter.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","// gets JSX expressions within a Babel's AST\nexport const collectJSXExpressions = (ast, traverse, traverseOptions = {}) => {\n   const jsxExpressions = [];\n   \n   const enter = (path) => {\n      if (path.type.toUpperCase().includes(\"JSX\")) {\n         jsxExpressions.push(path);\n      }\n   }\n   \n   traverse(ast, {...traverseOptions, enter});\n   \n   return jsxExpressions;\n}\n\nexport const isJSXIdentifier = (path) => {\n   return (path && (\n         path.key === 'object' ||\n         path.key === 'property' ||\n         path.key === 'name' ||\n         path.key === 'namespace'\n      )\n   );\n}\n\nexport const isParentJSXAttribute = (path) => {\n   return (\n      path &&\n      path.parentPath &&\n      path.parentPath.isJSXAttribute()\n   );\n};\n\nexport const getLoc = (path) => {\n   return (path && path.node && path.node.loc);\n};\n\nexport const cloneLoc = (path) => {\n   const loc = getLoc(path);\n   \n   if (!loc) {\n      return null;\n   }\n   \n   return {\n      start: {...loc.start},\n      end: {...loc.end}\n   };\n   \n};\n\n// prevents spilling highlighting on objects props\nexport const getCuratedLoc = (path) => {\n   const loc = cloneLoc(path);\n   \n   if (!loc) {\n      return [null, null, null, null];\n   }\n   \n   if (path.key === 'object' && path.container) {\n      loc.end = {...path.container.property.loc.start};\n   }\n   \n   return loc;\n   \n};\n\nexport const extractJSXOpeningElement = (path) => {\n   const loc = getLoc(path);\n   \n   if (!loc) {\n      return [null, null, null, null];\n   }\n   \n   const openingElement = path.node.openingElement;\n   \n   if (!openingElement) {\n      return [null, null, null, null];\n   }\n   \n   const elementName = openingElement.name.name;\n   \n   const startLoc = {\n      start: {...openingElement.loc.start},\n      end: {...openingElement.name.loc.start}\n   };\n   \n   const endLoc = {\n      start: {...openingElement.loc.end},\n      end: {...openingElement.loc.end}\n   };\n   endLoc.start.column--;\n   \n   if (openingElement.selfClosing) {\n      endLoc.start.column--;\n   }\n   \n   return [openingElement, elementName, startLoc, endLoc];\n};\n\nexport const extractJSXClosingElement = (path) => {\n   const loc = getLoc(path);\n   \n   if (!loc) {\n      return [null, null, null, null];\n   }\n   \n   const closingElement = path.node.closingElement;\n   \n   if (!closingElement) {\n      return [null, null, null, null];\n   }\n   \n   const elementName = closingElement.name && closingElement.name.name;\n   \n   const startLoc = {\n      start: {...closingElement.loc.start},\n      end: {...closingElement.name.loc.start}\n   };\n   \n   const endLoc = {\n      start: {...closingElement.loc.end},\n      end: {...closingElement.loc.end}\n   };\n   endLoc.start.column--;\n   \n   return [closingElement, elementName, startLoc, endLoc];\n};\n\nexport const extractJSXExpressionEdges = (path) => {\n   const loc = getLoc(path);\n   \n   if (!loc) {\n      return [null, null, null, null];\n   }\n   \n   let innerNode = null;\n   let innerLocKey = path.isJSXSpreadChild() ? 'expression'\n      : path.isJSXSpreadAttribute() ? 'argument'\n         : null;\n   \n   let innerLoc = null;\n   \n   if (innerLocKey) {\n      innerNode = path.node[innerLocKey];\n      \n      innerLoc = {\n         start: {...innerNode.loc.start},\n         end: {...innerNode.loc.end}\n      };\n      \n      if (innerNode.extra && innerNode.extra.parenthesized) {\n         innerLoc.start.column--;\n         innerLoc.end.column++;\n      }\n   } else {\n      innerLoc = {start: {...loc.start}, end: {...loc.end}};\n      innerLoc.start.column++;\n      innerLoc.end.column--;\n   }\n   \n   const startEdgeLoc = {start: {...loc.start}, end: {...innerLoc.start}};\n   \n   const endEdgeLoc = {start: {...innerLoc.end}, end: {...loc.end}};\n   return [innerNode, innerLocKey, startEdgeLoc, endEdgeLoc];\n};\n","export const COMMENT_ACTION_ID = \"editor.action.commentLine\";\n\n// adapts location objects (e.g. Babel uses internally Acorn) to Monaco Ranges\nexport const configureLoc2Range = (\n   monaco, parserType = 'babel'\n) => {\n   switch (parserType) {\n      case 'babel':\n      default:\n         return (\n            loc,\n            startLineOffset = 0,\n            startColumnOffset = 0,\n            endLineOffset = 0,\n            endColumnOffset = 0,\n         ) => {\n            if (!loc || !loc.start) {\n               return new monaco.Range(\n                  1,\n                  1,\n                  1,\n                  1\n               );\n            }\n            return new monaco.Range(\n               startLineOffset + loc.start.line,\n               startColumnOffset + loc.start.column + 1,\n               endLineOffset + loc.end ?\n                  loc.end.line\n                  : loc.start.line,\n               endColumnOffset + loc.end ?\n                  loc.end.column + 1\n                  : loc.start.column + 1,\n            );\n         };\n   }\n};\n\nexport const configureRange2Loc = (\n   parserType = 'babel'\n) => {\n   switch (parserType) {\n      case 'babel':\n      default:\n         return (\n            rangeOrPosition,\n            startLineOffset = 0,\n            startColumnOffset = 0,\n            endLineOffset = 0,\n            endColumnOffset = 0,\n         ) => {\n            const loc = {\n               start: {line: 0, column: 0},\n               end: {line: 0, column: 0}\n            };\n            \n            if (!rangeOrPosition) {\n               return loc;\n            }\n            \n            // position\n            if (rangeOrPosition.lineNumber) {\n               loc.start.line =\n                  startLineOffset + rangeOrPosition.lineNumber;\n               loc.start.column =\n                  startColumnOffset + rangeOrPosition.column - 1;\n               loc.end.line = endLineOffset + rangeOrPosition.lineNumber;\n               loc.end.column = endColumnOffset + rangeOrPosition.column - 1;\n            } else {\n               loc.start.line =\n                  startLineOffset + rangeOrPosition.startLineNumber;\n               loc.start.column =\n                  startColumnOffset + rangeOrPosition.startColumn - 1;\n               loc.end.line = endLineOffset + rangeOrPosition.endLineNumber;\n               loc.end.column = endColumnOffset + rangeOrPosition.endColumn - 1;\n            }\n            \n            return loc;\n         };\n   }\n};\n\nexport class MonacoEditorManager {\n   constructor(monacoEditor, monaco, loc2Range) {\n      this.monacoEditor = monacoEditor;\n      this.monaco = monaco;\n      this.loc2Range = loc2Range || configureRange2Loc(monaco);\n      \n      // default editor comment action\n      this.runEditorCommentLineAction = () => {\n         return this.monacoEditor\n            .getAction(COMMENT_ACTION_ID)\n            .run();\n      };\n      \n      // preserves indentation when commenting code\n      this.getLineIndentationColumn = (lineNumber) => {\n         return this.monacoEditor\n            .getModel()\n            .getLineFirstNonWhitespaceColumn(\n               lineNumber\n            );\n      };\n      \n      this.getCommentableStartingRange = (range) => {\n         const startColumn = this.getLineIndentationColumn(\n            range.startLineNumber\n         );\n         \n         // creates an anchor to check for comments\n         const commentableRange = new this.monaco.Range(\n            range.startLineNumber,\n            startColumn,\n            range.startLineNumber,\n            startColumn,\n         );\n         \n         return commentableRange;\n      };\n      \n      this.getCommentContainingStartingRange = (range) => {\n         // preserves indentation when commenting code\n         let startColumn = this.getLineIndentationColumn(\n            range.startLineNumber\n         );\n         \n         startColumn = startColumn ? startColumn - 1 : 0;\n         const containingRange = new this.monaco.Range(\n            range.startLineNumber,\n            startColumn,\n            range.startLineNumber,\n            startColumn,\n         );\n         \n         return containingRange;\n      };\n      \n      this.getSelectionFirstLineText = () => {\n         const model = this.monacoEditor.getModel();\n         const {startLineNumber} = this.monacoEditor.getSelection();\n         \n         const jsCommentRange = new this.monaco.Range(\n            startLineNumber,\n            this.getLineIndentationColumn(\n               startLineNumber\n            ),\n            startLineNumber,\n            model.getLineMaxColumn(startLineNumber),\n         );\n         return model.getValueInRange(jsCommentRange);\n      };\n   }\n}\n","import {\n   extractJSXOpeningElement,\n   extractJSXClosingElement,\n   getLoc,\n   getCuratedLoc,\n   isJSXIdentifier,\n   isParentJSXAttribute,\n   extractJSXExpressionEdges\n} from \"../utils/babel\";\n\nexport const prepareOptions =(\n   path,\n   jsxTypeOptions = {},\n   highlighterOptions = {}\n) =>{\n   return highlighterOptions.iShowHover ?\n      {...jsxTypeOptions, ...{hoverMessage: `(${path.type})`}}\n      : jsxTypeOptions;\n};\n\nexport const HIGHLIGHT_TYPE = {\n   ELEMENT: 'ELEMENT', // jsx elements\n   ALL: 'ALL', // the whole node's location, e.g. identifier names\n   IDENTIFIER: 'IDENTIFIER', // JSX identifiers\n   EDGE: 'EDGE', // only the  starting and ending characters in node's\n   // location e.g. spread child or attribute, container expressions\n   STYLE: 'STYLE', // for styling only, not used by node locations\n};\n\n\nexport const HIGHLIGHT_MODE = {\n   /**\n    *  ALL functions follow this signature:\n    *  @param {Babel Path} - the path to process.\n    *  @param {Object} jsxTypeOptions - the Monaco Decorator options to be used.\n    *  @param {Object} highlighterOptions - this library configuration for\n    *  highlighting.\n    *  @returns {Array} a collection JSX entries, each entry is an array too:\n    *  0: location object matching Babel's Location structure.\n    *  1: JSXTypes' Monaco options to create a highlighting  decorator.\n    *  Note: Purposely array entries to prevent using them directly with\n    Monaco without properly adapting Babel locations to Monaco Ranges.\n    **/\n   [HIGHLIGHT_TYPE.ELEMENT]: (\n      path,\n      jsxTypeOptions,\n      highlighterOptions,\n   ) => {\n      const [\n         openingElement, elementName, startLoc, endLoc\n      ] = extractJSXOpeningElement(path);\n      \n      const result = [];\n      \n      if (openingElement) {\n         result.push([\n            startLoc,\n            highlighterOptions.isUseSeparateElementStyles ?\n               JSXTypes.JSXBracket.openingElementOptions\n               : JSXTypes.JSXBracket.options\n         ]);\n         \n         result.push([\n            endLoc,\n            highlighterOptions.isUseSeparateElementStyles ?\n               JSXTypes.JSXBracket.openingElementOptions\n               : JSXTypes.JSXBracket.options\n         ]);\n      }\n      \n      const [\n         closingElement, , closingElementStartLoc, closingElementEndLoc\n      ] = extractJSXClosingElement(path);\n      \n      if (closingElement) {\n         result.push([\n            closingElementStartLoc,\n            highlighterOptions.isUseSeparateElementStyles ?\n               JSXTypes.JSXBracket.closingElementOptions\n               : JSXTypes.JSXBracket.options\n         ]);\n         result.push([\n            closingElementEndLoc,\n            highlighterOptions.isUseSeparateElementStyles ?\n               JSXTypes.JSXBracket.closingElementOptions\n               : JSXTypes.JSXBracket.options\n         ]);\n      }\n      \n      const loc = getLoc(path);\n      highlighterOptions.isHighlightGlyph && result.push([\n         loc,\n         JSXTypes.JSXElement.options(elementName)\n      ]);\n      return result;\n   },\n   [HIGHLIGHT_TYPE.ALL]: (\n      path,\n      jsxTypeOptions,\n      highlighterOptions,\n   ) => {\n      const curatedLoc = getCuratedLoc(path);\n      const result = [];\n      curatedLoc && result.push([\n         curatedLoc,\n         prepareOptions(path, jsxTypeOptions, highlighterOptions)\n      ]);\n      return result;\n   },\n   [HIGHLIGHT_TYPE.IDENTIFIER]: (\n      path,\n      jsxTypeOptions,\n      highlighterOptions,\n   ) => {\n      if (!isJSXIdentifier(path)) {\n         return [];\n      }\n      \n      return HIGHLIGHT_MODE[HIGHLIGHT_TYPE.ALL](\n         path,\n         isParentJSXAttribute(path) ?\n            JSXTypes.JSXAttribute.options : jsxTypeOptions,\n         highlighterOptions,\n      );\n   },\n   [HIGHLIGHT_TYPE.EDGE]: (\n      path,\n      jsxTypeOptions,\n      highlighterOptions,\n   ) => {\n      const options = prepareOptions(path, jsxTypeOptions, highlighterOptions);\n      \n      const [\n         , , startEdgeLoc, endEdgeLoc\n      ] = extractJSXExpressionEdges(path);\n      \n      const result = [];\n      \n      result.push([\n         startEdgeLoc,\n         options\n      ]);\n      result.push([\n         endEdgeLoc,\n         options\n      ]);\n      \n      return result;\n      \n   },\n   [HIGHLIGHT_TYPE.STYLE]: () => [], // noop\n};\n\nexport const JSXTypes = {\n   JSXIdentifier: {\n      highlightScope: HIGHLIGHT_TYPE.IDENTIFIER,\n      options: {\n         inlineClassName: 'JSXElement.JSXIdentifier',\n      },\n   },\n   JSXOpeningFragment: {\n      highlightScope: HIGHLIGHT_TYPE.ALL,\n      options: {\n         inlineClassName: 'JSXOpeningFragment.JSXBracket',\n      },\n   },\n   JSXClosingFragment: {\n      highlightScope: HIGHLIGHT_TYPE.ALL,\n      options: {\n         inlineClassName: 'JSXClosingFragment.JSXBracket',\n      },\n   },\n   JSXText: {\n      highlightScope: HIGHLIGHT_TYPE.ALL,\n      options: {\n         inlineClassName: 'JSXElement.JSXText',\n      },\n   },\n   JSXExpressionContainer: {\n      highlightScope: HIGHLIGHT_TYPE.EDGE,\n      options: {\n         inlineClassName: 'JSXExpressionContainer.JSXBracket',\n      },\n   },\n   JSXSpreadChild: {\n      highlightScope: HIGHLIGHT_TYPE.EDGE,\n      options: {\n         inlineClassName: 'JSXSpreadChild.JSXBracket',\n      },\n   },\n   JSXSpreadAttribute: {\n      highlightScope: HIGHLIGHT_TYPE.EDGE,\n      options: {\n         inlineClassName: 'JSXSpreadAttribute.JSXBracket',\n      },\n   },\n   JSXElement: {\n      highlightScope: HIGHLIGHT_TYPE.ELEMENT, //HIGHLIGHT_TYPE.STYLE,\n      options: (elementName) => (\n         {\n            glyphMarginClassName: 'JSXElement.JSXGlyph',\n            glyphMarginHoverMessage:\n               `JSX Element${elementName ? ': ' + elementName : ''}`\n         }\n      ),\n   },\n   JSXBracket: {\n      highlightScope: HIGHLIGHT_TYPE.STYLE,\n      options: {\n         inlineClassName: 'JSXElement.JSXBracket',\n      },\n      openingElementOptions: {\n         inlineClassName: 'JSXOpeningElement.JSXBracket',\n      },\n      closingElementOptions: {\n         inlineClassName: 'JSXClosingElement.JSXBracket',\n      },\n   },\n   JSXOpeningElement: {\n      highlightScope: HIGHLIGHT_TYPE.STYLE,\n      options: {\n         inlineClassName: 'JSXOpeningElement.JSXIdentifier',\n      },\n   },\n   JSXClosingElement: {\n      highlightScope: HIGHLIGHT_TYPE.STYLE,\n      options: {\n         inlineClassName: 'JSXClosingElement.JSXIdentifier',\n      },\n   },\n   JSXAttribute: {\n      highlightScope: HIGHLIGHT_TYPE.STYLE,\n      options: {\n         inlineClassName: 'JSXAttribute.JSXIdentifier',\n      },\n   },\n};\n\nclass DecoratorMapper {\n   constructor(monacoEditor, loc2Range, _JSXTypes = JSXTypes) {\n      let decorators = [];\n      let jsxDecoratorIds = [];\n      \n      const addDecorator = ([loc, options]) => {\n         return decorators.push({\n            range: loc2Range(loc),\n            options\n         });\n      }\n      \n      const deltaDecorations = () => {\n         jsxDecoratorIds =\n            monacoEditor.deltaDecorations(\n               jsxDecoratorIds || [],\n               decorators\n            );\n         decorators = [];\n         return jsxDecoratorIds;\n      }\n      \n      this.deltaJSXDecorations = (jsxExpressions, options) => {\n         for (const jsxType in _JSXTypes) {\n            jsxExpressions.filter(path => path.type === jsxType)\n               .forEach(path =>\n                  HIGHLIGHT_MODE[_JSXTypes[jsxType].highlightScope](\n                     path,\n                     _JSXTypes[jsxType].options,\n                     options,\n                  ).forEach(entry => addDecorator(entry))\n               );\n         }\n         \n         return deltaDecorations();\n      }\n      \n      this.reset = () => {\n         decorators = [];\n         deltaDecorations();\n      }\n      \n      this.reset();\n   }\n}\n\nexport default DecoratorMapper;\n","export const JSXCommentContexts = {\n   JS: 'JS',\n   JSX: 'JSX'\n}\n\nexport function getJSXContext(\n   jsxExpressions,\n   commentableRange,\n   commentContainingRange,\n   loc2Range\n) {\n   if (!(jsxExpressions &&\n      commentableRange &&\n      commentContainingRange &&\n      loc2Range)) {\n      return JSXCommentContexts.JS;\n   }\n   \n   \n   let minRange = null;\n   let minCommentableRange = null;\n   let path = null;\n   let commentablePath = null;\n   \n   jsxExpressions.forEach(p => {\n      const jsxRange = loc2Range(p.node.loc);\n      if ((p.key === 'name' || p.key === 'property') &&\n         p.isJSXIdentifier() &&\n         jsxRange.intersectRanges(commentableRange)) {\n         if (\n            !minCommentableRange ||\n            minCommentableRange.containsRange(jsxRange)\n         ) {\n            minCommentableRange = jsxRange;\n            commentablePath = p;\n         }\n      }\n      if (jsxRange.intersectRanges(commentContainingRange)) {\n         if (!minRange || minRange.containsRange(jsxRange)) {\n            minRange = jsxRange;\n            path = p;\n         }\n      }\n   });\n   \n   if (!path || path.isJSXExpressionContainer() || commentablePath) {\n      return JSXCommentContexts.JS;\n   } else {\n      return JSXCommentContexts.JSX;\n   }\n}\n\nclass Commenter {\n   constructor(\n      monacoEditorManager,\n      parseJSXExpressionsPromise\n   ) {\n      \n      let _editorCommandId = null;\n      \n      this.getEditorCommandId = () => {\n         return _editorCommandId;\n      }\n      \n      let _isJSXCommentCommandActive = false;\n      \n      this.isJSXCommentCommandActive = () => {\n         return _isJSXCommentCommandActive;\n      }\n      \n      const editorCommandOnDispose = () => {\n         _isJSXCommentCommandActive = false;\n      };\n      \n      this.runJsxCommentAction = (selection, commentContext) => {\n         const {\n            monacoEditor, monaco, runEditorCommentLineAction,\n            getSelectionFirstLineText,\n         } = monacoEditorManager;\n         \n         const jsCommentText = getSelectionFirstLineText();\n         \n         if (jsCommentText.match(/^\\s*\\/[/*]/)) {\n            runEditorCommentLineAction();\n            return;\n         }\n         \n         const model = monacoEditor.getModel();\n         \n         let isUnCommentAction = true;\n         const commentsData = [];\n         \n         for (\n            let i = selection.startLineNumber; i <= selection.endLineNumber; i++\n         ) {\n            const commentRange = new monaco.Range(\n               i,\n               model.getLineFirstNonWhitespaceColumn(i),\n               i,\n               model.getLineMaxColumn(i),\n            );\n            \n            const commentText = model.getValueInRange(commentRange);\n            \n            commentsData.push({\n               commentRange,\n               commentText\n            });\n            \n            isUnCommentAction = isUnCommentAction &&\n               !!commentText.match(/{\\/\\*/);\n         }\n         \n         if (commentContext !== JSXCommentContexts.JSX\n            && !isUnCommentAction) {\n            runEditorCommentLineAction();\n            return;\n         }\n         \n         let editOperations = [];\n         let commentsDataIndex = 0;\n         \n         for (let i = selection.startLineNumber;\n              i <= selection.endLineNumber;\n              i++) {\n            let {\n               commentText,\n               commentRange,\n            } = commentsData[commentsDataIndex++];\n            \n            if (isUnCommentAction) {\n               commentText = commentText.replace(/{\\/\\*/, '');\n               commentText = commentText.replace(/\\*\\/}/, '');\n            } else {\n               commentText = `{/*${commentText}*/}`;\n            }\n            \n            editOperations.push({\n               identifier: {major: 1, minor: 1},\n               range: commentRange,\n               text: commentText,\n               forceMoveMarkers: true,\n            });\n         }\n         editOperations.length &&\n         monacoEditor.executeEdits(_editorCommandId, editOperations);\n      }\n      \n      this.addJSXCommentCommand = () => {\n         const {\n            monacoEditor, monaco, loc2Range, runEditorCommentLineAction,\n            getCommentableStartingRange, getCommentContainingStartingRange\n         } = monacoEditorManager;\n         \n         if (_editorCommandId) {\n            _isJSXCommentCommandActive = true;\n            return editorCommandOnDispose;\n         }\n         \n         _editorCommandId = monacoEditor.addCommand(\n            monaco.KeyMod.CtrlCmd | monaco.KeyCode.US_SLASH,\n            () => {\n               if (!_isJSXCommentCommandActive) {\n                  runEditorCommentLineAction();\n                  return;\n               }\n               \n               parseJSXExpressionsPromise()\n                  .then(jsxExpressions => {\n                     const selection = monacoEditor.getSelection();\n                     const commentContext = getJSXContext(\n                        jsxExpressions,\n                        getCommentableStartingRange(selection),\n                        getCommentContainingStartingRange(selection),\n                        loc2Range\n                     );\n                     this.runJsxCommentAction(selection, commentContext);\n                  }).catch(()=>{\n                   runEditorCommentLineAction();\n               });\n            });\n         \n         _isJSXCommentCommandActive = true;\n         \n         monacoEditor.onDidDispose(editorCommandOnDispose);\n         \n         return editorCommandOnDispose;\n      }\n   }\n}\n\nexport default Commenter;\n","import {\n   configureLoc2Range,\n   configureRange2Loc,\n   MonacoEditorManager\n} from '../utils/monaco';\nimport {collectJSXExpressions} from '../utils/babel';\nimport DecoratorMapper from './DecoratorMapper';\nimport Commenter from './Commenter';\n\nconst defaultOptions = {\n   parser: 'babel',\n   isHighlightGlyph: false,\n   iShowHover: false,\n   isUseSeparateElementStyles: false,\n   jsxCommenter: null,\n   monacoEditorManager: null,\n   decoratorMapper: null,\n};\n\nexport const makeGetAstPromise = (parse, monacoEditor) => () => {\n   return new Promise(\n      (resolve, reject) => {\n         try {\n            return resolve(\n               parse(monacoEditor.getValue()) // ast\n            );\n         } catch (e) {\n            return reject(e);\n         }\n      }\n   );\n};\n\nexport const makeParseJSXExpressionsPromise = (\n   traverse, getAstPromise, _collectJSXExpressions = collectJSXExpressions\n) => () => {\n   return new Promise((resolve, reject) => {\n      getAstPromise()\n         .then(ast => {\n               try {\n                  return resolve(\n                     _collectJSXExpressions(ast, traverse)\n                  );\n               } catch (e) {\n                  return reject(e);\n               }\n            }\n         ).catch(e => reject(e));\n   });\n};\n\nexport const makeJSXCommenterBundle = (\n   monaco, parse, traverse, monacoEditor, options = {}\n) => {\n   const {parserType, jsxCommenter, monacoEditorManager} = options;\n   const range2Loc = configureRange2Loc(parserType);\n   const loc2Range = configureLoc2Range(monaco, parserType);\n   \n   const getAstPromise = makeGetAstPromise(parse, monacoEditor);\n   \n   const parseJSXExpressionsPromise = makeParseJSXExpressionsPromise(\n      traverse, getAstPromise\n   );\n   \n   const _monacoEditorManager = monacoEditorManager ||\n      new MonacoEditorManager(monacoEditor, monaco, loc2Range);\n   \n   const _jsxCommenter = jsxCommenter || new Commenter(\n      _monacoEditorManager, parseJSXExpressionsPromise\n   );\n   \n   return [\n      _jsxCommenter, _monacoEditorManager,\n      parseJSXExpressionsPromise, getAstPromise,\n      loc2Range, range2Loc\n   ];\n};\n\n// Minimal Babel setup for React JSX parsing:\nexport const makeBabelParse = (parse) => {\n   return (code, options = {}) => {\n      return parse(\n         code,\n         {\n            ...options,\n            sourceType: \"module\",\n            plugins: [\"jsx\"],\n            errorRecovery: true\n         });\n      \n   };\n};\n\nclass MonacoJSXHighlighter {\n   constructor(\n      monaco,\n      parse,\n      traverse,\n      monacoEditor,\n      options = {}\n   ) {\n      this.options = {...defaultOptions, ...options};\n      \n      const {jsxCommenter, monacoEditorManager, decoratorMapper} = this.options;\n      \n      this.babelParse = makeBabelParse(parse);\n      \n      const [\n         _jsxCommenter, _monacoEditorManager,\n         parseJSXExpressionsPromise, getAstPromise,\n         loc2Range, range2Loc\n      ] = makeJSXCommenterBundle(\n         monaco, this.babelParse, traverse, monacoEditor, this.options\n      );\n      \n      this.jsxCommenter = jsxCommenter || _jsxCommenter;\n      this.monacoEditorManager = monacoEditorManager || _monacoEditorManager;\n      this.parseJSXExpressionsPromise = parseJSXExpressionsPromise;\n      this.getAstPromise = getAstPromise;\n      this.loc2Range = loc2Range;\n      this.range2Loc = range2Loc;\n      \n      this.addJSXCommentCommand = this.jsxCommenter.addJSXCommentCommand;\n      \n      \n      this.decoratorMapper = decoratorMapper ||\n         new DecoratorMapper(monacoEditor, this.loc2Range);\n      this.decoratorMapperReset = () => {\n         decoratorMapper.reset()\n      };\n      \n      this.highlight = (\n         ast, _collectJSXExpressions = collectJSXExpressions\n      ) => {\n         return new Promise((resolve, reject) => {\n            const {decoratorMapper, options} = this;\n            const result = {\n               decoratorMapper,\n               options,\n               ast,\n               jsxExpressions: [],\n            };\n            \n            //ignore update if parsing was unsuccessful\n            if (!ast) {\n               return resolve(result);\n            }\n            \n            try {\n               const jsxExpressions = _collectJSXExpressions(ast, traverse);\n               \n               decoratorMapper.deltaJSXDecorations(\n                  jsxExpressions, options\n               );\n               \n               result.jsxExpressions = jsxExpressions;\n               \n               return resolve(result);\n            } catch (e) {\n               return reject(e);\n            }\n         });\n      };\n      \n      this.highlightCode = (\n         afterHighlight = ast => ast,\n         onHighlightError = error => error,\n         getAstPromise = this.getAstPromise,\n         onGetAstError = error => error,\n      ) => {\n         return (\n            getAstPromise()\n               .then(ast => {\n                  this.highlight(ast)\n                     .then(afterHighlight)\n                     .catch(onHighlightError)\n               })\n               .catch(onGetAstError)\n         );\n      };\n      \n      let _isHighlightBoundToModelContentChanges = false;\n      \n      this.isHighlightBoundToModelContentChanges =\n         () => _isHighlightBoundToModelContentChanges;\n      \n      this.highlightOnDidChangeModelContent = (\n         debounceTime = 100,\n         afterHighlight = ast => ast,\n         onHighlightError = error => error,\n         getAstPromise = this.getAstPromise,\n         onParseAstError = error => error,\n      ) => {\n         const highlightCallback = () => {\n            return this.highlightCode(\n               afterHighlight,\n               onHighlightError,\n               getAstPromise,\n               onParseAstError\n            );\n         };\n         \n         highlightCallback();\n         \n         let tid = null;\n         \n         let highlighterDisposer = {\n            onDidChangeModelContentDisposer:\n               monacoEditor.onDidChangeModelContent(\n                  () => {\n                     clearTimeout(tid);\n                     tid = setTimeout(\n                        highlightCallback,\n                        debounceTime\n                     );\n                  }),\n            onDidChangeModelDisposer: monacoEditor.onDidChangeModel(\n               () => {\n                  highlightCallback();\n               })\n         };\n         \n         highlighterDisposer.dispose = () => {\n            highlighterDisposer.onDidChangeModelContentDisposer.dispose();\n            highlighterDisposer.onDidChangeModelDisposer.dispose();\n         };\n         \n         _isHighlightBoundToModelContentChanges = true;\n         \n         const onDispose = () => {\n            this.decoratorMapper.reset();\n            if (\n               !_isHighlightBoundToModelContentChanges\n            ) {\n               return;\n            }\n            _isHighlightBoundToModelContentChanges = false;\n            highlighterDisposer && highlighterDisposer.dispose();\n            highlighterDisposer = null;\n            \n         }\n         \n         monacoEditor.onDidDispose(() => {\n            this.decoratorMapper.reset();\n            highlighterDisposer = null;\n            _isHighlightBoundToModelContentChanges = false;\n         });\n         \n         \n         return onDispose;\n      };\n      \n      // backwards compatible typo preserve to avoid breaking changes\n      this.highLightOnDidChangeModelContent =\n         this.highlightOnDidChangeModelContent;\n   }\n}\n\n// use .polyfilled dist when usign node < 10. // .babelrc.json:  \"node\": \"0\"\nexport default MonacoJSXHighlighter;\n"],"names":["collectJSXExpressions","ast","traverse","traverseOptions","jsxExpressions","enter","path","type","toUpperCase","includes","push","isJSXIdentifier","key","isParentJSXAttribute","parentPath","isJSXAttribute","getLoc","node","loc","cloneLoc","start","end","getCuratedLoc","container","property","extractJSXOpeningElement","openingElement","elementName","name","startLoc","endLoc","column","selfClosing","extractJSXClosingElement","closingElement","extractJSXExpressionEdges","innerNode","innerLocKey","isJSXSpreadChild","isJSXSpreadAttribute","innerLoc","extra","parenthesized","startEdgeLoc","endEdgeLoc","COMMENT_ACTION_ID","configureLoc2Range","monaco","parserType","startLineOffset","startColumnOffset","endLineOffset","endColumnOffset","Range","line","configureRange2Loc","rangeOrPosition","lineNumber","startLineNumber","startColumn","endLineNumber","endColumn","MonacoEditorManager","constructor","monacoEditor","loc2Range","runEditorCommentLineAction","getAction","run","getLineIndentationColumn","getModel","getLineFirstNonWhitespaceColumn","getCommentableStartingRange","range","commentableRange","getCommentContainingStartingRange","containingRange","getSelectionFirstLineText","model","getSelection","jsCommentRange","getLineMaxColumn","getValueInRange","prepareOptions","jsxTypeOptions","highlighterOptions","iShowHover","hoverMessage","HIGHLIGHT_TYPE","ELEMENT","ALL","IDENTIFIER","EDGE","STYLE","HIGHLIGHT_MODE","result","isUseSeparateElementStyles","JSXTypes","JSXBracket","openingElementOptions","options","closingElementStartLoc","closingElementEndLoc","closingElementOptions","isHighlightGlyph","JSXElement","curatedLoc","JSXAttribute","JSXIdentifier","highlightScope","inlineClassName","JSXOpeningFragment","JSXClosingFragment","JSXText","JSXExpressionContainer","JSXSpreadChild","JSXSpreadAttribute","glyphMarginClassName","glyphMarginHoverMessage","JSXOpeningElement","JSXClosingElement","DecoratorMapper","_JSXTypes","decorators","jsxDecoratorIds","addDecorator","deltaDecorations","deltaJSXDecorations","jsxType","filter","forEach","entry","reset","JSXCommentContexts","JS","JSX","getJSXContext","commentContainingRange","minRange","minCommentableRange","commentablePath","p","jsxRange","intersectRanges","containsRange","isJSXExpressionContainer","Commenter","monacoEditorManager","parseJSXExpressionsPromise","_editorCommandId","getEditorCommandId","_isJSXCommentCommandActive","isJSXCommentCommandActive","editorCommandOnDispose","runJsxCommentAction","selection","commentContext","jsCommentText","match","isUnCommentAction","commentsData","i","commentRange","commentText","editOperations","commentsDataIndex","replace","identifier","major","minor","text","forceMoveMarkers","length","executeEdits","addJSXCommentCommand","addCommand","KeyMod","CtrlCmd","KeyCode","US_SLASH","then","catch","onDidDispose","defaultOptions","parser","jsxCommenter","decoratorMapper","makeGetAstPromise","parse","Promise","resolve","reject","getValue","e","makeParseJSXExpressionsPromise","getAstPromise","_collectJSXExpressions","makeJSXCommenterBundle","range2Loc","_monacoEditorManager","_jsxCommenter","makeBabelParse","code","sourceType","plugins","errorRecovery","MonacoJSXHighlighter","babelParse","decoratorMapperReset","highlight","highlightCode","afterHighlight","onHighlightError","error","onGetAstError","_isHighlightBoundToModelContentChanges","isHighlightBoundToModelContentChanges","highlightOnDidChangeModelContent","debounceTime","onParseAstError","highlightCallback","tid","highlighterDisposer","onDidChangeModelContentDisposer","onDidChangeModelContent","clearTimeout","setTimeout","onDidChangeModelDisposer","onDidChangeModel","dispose","onDispose","highLightOnDidChangeModelContent"],"mappings":"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"}