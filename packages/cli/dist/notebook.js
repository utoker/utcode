[{"content":"\n## JSCode\n\nThis is an interactive coding environment. You can write Javascript, see it executed, and write comprehensive documentation using markdown.\n\n- Click any text cell (including this one) to edit it\n- The code in each editor is all joined together into one file. if you define a variable in cell #1, you can refer to it in any following cell!\n- You can show any React component, string, number, or anything else by calling the `show` function. This is a function built into this environment. Call show multiple times to show multiple values.\n- Re-order or delete cells using the buttons on the top right\n- Add new cells by hovering on the divider between each cell\n\nAll of your changes get saved to the file you opened JSCode with. So if you ran `npx utoker-jscode serve test.js` , all of the text and code you write will be saved to the test.js file.","type":"text","id":"rcf9i"},{"content":"import { useState } from 'react';\n\nconst Counter = () => {\n  const [count, setCount] = useState(0);\n  return (\n    <div>\n      <button> onClick={setCount(count + 1)}</button>\n      <h3>Count: {count}</h3>\n    </div>\n  );\n};\n\n// Display any variable or React Compenent by calling 'show'\nshow(Counter);","type":"code","id":"ipt7g"},{"content":"const App = () => {\n  return (\n    <div>\n      <h3>App Says hi!</h3>\n      <i>Counter component will be rendered below...</i>\n      <hr />\n      {/*\n            Counter was declared in an earlier cell - we can reference it here!\n        */}\n      <Counter />\n    </div>\n  );\n};\n\nshow(App);","type":"code","id":"rakad"},{"content":"const Ass = () => {\n    return <h1>sssss</h1>\n}\n\nshow(Ass)","type":"code","id":"f2z7u"},{"content":"","type":"text","id":"hqxg0"}]